[19:59, 1/20/2025] pujarikadambini: pip install flask flask-sqlalchemy flask-restful
[19:59, 1/20/2025] pujarikadambini: from flask import Flask, request, jsonify
from flask_sqlalchemy import SQLAlchemy

app = Flask(_name_)
app.config['SQLALCHEMY_DATABASE_URI'] = 'sqlite:///library.db'
app.config['SQLALCHEMY_TRACK_MODIFICATIONS'] = False
db = SQLAlchemy(app)

# Models
class Book(db.Model):
    id = db.Column(db.Integer, primary_key=True)
    title = db.Column(db.String(100), nullable=False)
    author = db.Column(db.String(50), nullable=False)
    quantity = db.Column(db.Integer, nullable=False)

# Routes
@app.route('/books', methods=['POST'])
def create_book():
    data = request.get_json()
    new_book = Book(title=data['title'], author=data['author'], quantity=data['quantity'])
    db.session.add(new_book)
    db.session.commit()
    return jsonify({'message': 'Book added successfully!'}), 201

@app.route('/books', methods=['GET'])
def get_books():
    books = Book.query.all()
    output = [{'id': book.id, 'title': book.title, 'author': book.author, 'quantity': book.quantity} for book in books]
    return jsonify(output)

@app.route('/books/<int:id>', methods=['GET'])
def get_book(id):
    book = Book.query.get_or_404(id)
    return jsonify({'id': book.id, 'title': book.title, 'author': book.author, 'quantity': book.quantity})

@app.route('/books/<int:id>', methods=['PUT'])
def update_book(id):
    data = request.get_json()
    book = Book.query.get_or_404(id)
    book.title = data['title']
    book.author = data['author']
    book.quantity = data['quantity']
    db.session.commit()
    return jsonify({'message': 'Book updated successfully!'})

@app.route('/books/<int:id>', methods=['DELETE'])
def delete_book(id):
    book = Book.query.get_or_404(id)
    db.session.delete(book)
    db.session.commit()
    return jsonify({'message': 'Book deleted successfully!'})

# Initialize Database
with app.app_context():
    db.create_all()

# Run the App
if _name_ == '_main_':
    app.run(debug=True)
[20:00, 1/20/2025] pujarikadambini: { "title": "Python Basics", "author": "John Doe", "quantity": 10 }
[20:00, 1/20/2025] pujarikadambini: { "title": "Advanced Python", "author": "John Doe", "quantity": 5 }